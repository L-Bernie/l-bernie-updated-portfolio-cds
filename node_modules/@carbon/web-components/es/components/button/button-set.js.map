{"version":3,"file":"button-set.js","names":["html","BUTTON_KIND","styles","prefix","CDSButtonSetBase","carbonElement","customElement","CDSButtonSet","_decorate","_initialize","_CDSButtonSetBase","constructor","args","F","d","kind","key","value","_handleSlotChange","event","childItems","target","assignedNodes","filter","elem","matches","undefined","selectorItem","forEach","index","setAttribute","SECONDARY","PRIMARY","update","CustomEvent","bubbles","cancelable","composed","dispatchEvent","render","_t","_","static"],"sources":["components/button/button-set.ts"],"sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2020, 2024\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html } from 'lit';\nimport { BUTTON_KIND } from './defs';\nimport styles from './button.scss';\nimport { prefix } from '../../globals/settings';\nimport CDSButtonSetBase from './button-set-base';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\n/**\n * Button set.\n *\n * @element cds-button-set\n */\n@customElement(`${prefix}-button-set`)\nclass CDSButtonSet extends CDSButtonSetBase {\n  /**\n   * Handler for @slotchange, set the first cds-button to kind secondary and primary for the remaining ones\n   *\n   * @private\n   */\n  protected _handleSlotChange(event: Event) {\n    const childItems = (event.target as HTMLSlotElement)\n      .assignedNodes()\n      .filter((elem) =>\n        (elem as HTMLElement).matches !== undefined\n          ? (elem as HTMLElement).matches(\n              (this.constructor as typeof CDSButtonSet).selectorItem\n            )\n          : false\n      );\n\n    childItems.forEach((elem, index) => {\n      (elem as HTMLElement).setAttribute(\n        'kind',\n        index === 0 ? BUTTON_KIND.SECONDARY : BUTTON_KIND.PRIMARY\n      );\n    });\n\n    const update = new CustomEvent(`${prefix}-btn-set-update`, {\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n    });\n\n    this.dispatchEvent(update);\n  }\n\n  render() {\n    return html` <slot @slotchange=\"${this._handleSlotChange}\"></slot> `;\n  }\n  /**\n   * A selector that will return the child items.\n   */\n  static get selectorItem() {\n    return `${prefix}-button`;\n  }\n\n  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader\n}\n\n/* @__GENERATE_REACT_CUSTOM_ELEMENT_TYPE__ */\nexport default CDSButtonSet;\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,IAAI,QAAQ,KAAK;AAC1B,SAASC,WAAW,QAAQ,QAAQ;AACpC,OAAOC,MAAM,MAAM,mBAAe;AAClC,SAASC,MAAM,QAAQ,wBAAwB;AAC/C,OAAOC,gBAAgB,MAAM,mBAAmB;AAChD,SAASC,aAAa,IAAIC,aAAa,QAAQ,yCAAyC;;AAExF;AACA;AACA;AACA;AACA;AAJA,IAMMC,YAAY,GAAAC,SAAA,EADjBF,aAAa,CAAC,GAAGH,MAAM,aAAa,CAAC,aAAAM,WAAA,EAAAC,iBAAA;EAAtC,MACMH,YAAY,SAAAG,iBAAA,CAA0B;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EA4C5C;EAAC;IAAAI,CAAA,EA5CKN,YAAY;IAAAO,CAAA;MAAAC,IAAA;MAAAC,GAAA;MAAAC,KAAA;MAChB;AACF;AACA;AACA;AACA;MACE,SAAUC,iBAAiBA,CAACC,KAAY,EAAE;QACxC,MAAMC,UAAU,GAAID,KAAK,CAACE,MAAM,CAC7BC,aAAa,CAAC,CAAC,CACfC,MAAM,CAAEC,IAAI,IACVA,IAAI,CAAiBC,OAAO,KAAKC,SAAS,GACtCF,IAAI,CAAiBC,OAAO,CAC1B,IAAI,CAACd,WAAW,CAAyBgB,YAC5C,CAAC,GACD,KACN,CAAC;QAEHP,UAAU,CAACQ,OAAO,CAAC,CAACJ,IAAI,EAAEK,KAAK,KAAK;UACjCL,IAAI,CAAiBM,YAAY,CAChC,MAAM,EACND,KAAK,KAAK,CAAC,GAAG5B,WAAW,CAAC8B,SAAS,GAAG9B,WAAW,CAAC+B,OACpD,CAAC;QACH,CAAC,CAAC;QAEF,MAAMC,MAAM,GAAG,IAAIC,WAAW,CAAC,GAAG/B,MAAM,iBAAiB,EAAE;UACzDgC,OAAO,EAAE,IAAI;UACbC,UAAU,EAAE,IAAI;UAChBC,QAAQ,EAAE;QACZ,CAAC,CAAC;QAEF,IAAI,CAACC,aAAa,CAACL,MAAM,CAAC;MAC5B;IAAC;MAAAlB,IAAA;MAAAC,GAAA;MAAAC,KAAA,EAED,SAAAsB,MAAMA,CAAA,EAAG;QACP,OAAOvC,IAAI,CAAAwC,EAAA,KAAAA,EAAA,GAAAC,CAAA,uCAAuB,IAAI,CAACvB,iBAAiB;MAC1D;MACA;AACF;AACA;IAFE;MAAAH,IAAA;MAAA2B,MAAA;MAAA1B,GAAA;MAAAC,KAAA,EAGA,SAAAA,CAAA,EAA0B;QACxB,OAAO,GAAGd,MAAM,SAAS;MAC3B;IAAC;MAAAY,IAAA;MAAA2B,MAAA;MAAA1B,GAAA;MAAAC,MAAA;QAAA,OAEef,MAAM;MAAA;IAAA;EAAA;AAAA,GA3CGE,gBAAgB;AA8C3C;AACA,eAAeG,YAAY","ignoreList":[]}