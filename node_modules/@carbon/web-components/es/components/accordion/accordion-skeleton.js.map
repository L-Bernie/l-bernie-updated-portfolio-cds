{"version":3,"file":"accordion-skeleton.js","names":["classMap","LitElement","html","property","prefix","ACCORDION_ALIGNMENT","forEach","ChevronRight16","styles","carbonElement","customElement","CDSAccordionSkeleton","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","reflect","key","value","END","type","Number","attribute","Boolean","updated","changedProperties","has","shadowRoot","querySelectorAll","selectorAccordionItemSkeletons","elem","setAttribute","alignment","isFlush","removeAttribute","render","classes","numSkeletonItems","open","count","_t","_2","_t2","part","class","Array","from","map","_","index","_t3","static"],"sources":["components/accordion/accordion-skeleton.ts"],"sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2024\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { classMap } from 'lit/directives/class-map.js';\nimport { LitElement, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { prefix } from '../../globals/settings';\nimport { ACCORDION_ALIGNMENT } from './accordion';\nimport { forEach } from '../../globals/internal/collection-helpers';\nimport ChevronRight16 from '@carbon/icons/lib/chevron--right/16';\nimport './accordion-item-skeleton';\nimport '../skeleton-text/index';\nimport styles from './accordion.scss';\n\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\n/**\n * Skeleton of code snippet.\n */\n@customElement(`${prefix}-accordion-skeleton`)\nclass CDSAccordionSkeleton extends LitElement {\n  /**\n   * Specify the alignment of the accordion heading title and chevron\n   */\n  @property({ reflect: true })\n  alignment = ACCORDION_ALIGNMENT.END;\n\n  /**\n   * Set number of items to render\n   */\n  @property({ type: Number, attribute: 'count' })\n  count = 4;\n\n  /**\n   * Specify whether Accordion text should be flush, default is false, does not work with align=\"start\"\n   */\n  @property({ type: Boolean, reflect: true })\n  isFlush = false;\n\n  /**\n   * `true` if the first accordion item should be open.\n   */\n  @property({ type: Boolean, reflect: true })\n  open = true;\n\n  updated(changedProperties) {\n    if (changedProperties.has('alignment')) {\n      // Propagate `alignment` attribute to descendants until `:host-context()` gets supported in all major browsers\n      forEach(\n        this.shadowRoot!.querySelectorAll(\n          (this.constructor as typeof CDSAccordionSkeleton)\n            .selectorAccordionItemSkeletons\n        ),\n        (elem) => {\n          elem.setAttribute('alignment', this.alignment);\n        }\n      );\n    }\n    if (\n      changedProperties.has('isFlush') ||\n      changedProperties.has('alignment')\n    ) {\n      // Propagate `isFlush` attribute to descendants until `:host-context()` gets supported in all major browsers\n      forEach(\n        this.shadowRoot!.querySelectorAll(\n          (this.constructor as typeof CDSAccordionSkeleton)\n            .selectorAccordionItemSkeletons\n        ),\n        (elem) => {\n          this.isFlush && this.alignment !== 'start'\n            ? elem.setAttribute('isFlush', '')\n            : elem.removeAttribute('isFlush');\n        }\n      );\n    }\n  }\n\n  render() {\n    const classes = classMap({\n      [`${prefix}--accordion__item`]: true,\n      [`${prefix}--accordion__item--active`]: true,\n      [`${prefix}--accordion--${this.alignment}`]: this.alignment,\n      [`${prefix}--accordion--flush`]:\n        this.isFlush && this.alignment !== 'start',\n    });\n    const numSkeletonItems = this.open ? this.count - 1 : this.count;\n    return html`\n      ${this.open\n        ? html`\n            <li class=\"${classes}\">\n              <span class=\"${prefix}--accordion__heading\">\n                ${ChevronRight16({\n                  part: 'expando-icon',\n                  class: `${prefix}--accordion__arrow`,\n                })}\n                <cds-skeleton-text\n                  class=\"${prefix}--accordion__title\"></cds-skeleton-text>\n              </span>\n              <div class=\"${prefix}--accordion__content\">\n                <cds-skeleton-text width=\"90%\"></cds-skeleton-text>\n                <cds-skeleton-text width=\"80%\"></cds-skeleton-text>\n                <cds-skeleton-text width=\"85%\"></cds-skeleton-text>\n              </div>\n            </li>\n          `\n        : ``}\n      ${Array.from(new Array(numSkeletonItems)).map(\n        (_, index) =>\n          html`\n            <cds-accordion-item-skeleton\n              key=${index}></cds-accordion-item-skeleton>\n          `\n      )}\n    `;\n  }\n\n  static get selectorAccordionItemSkeletons() {\n    return `${prefix}-accordion-item-skeleton`;\n  }\n\n  static styles = styles;\n}\n\nexport default CDSAccordionSkeleton;\n"],"mappings":"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","ignoreList":[]}