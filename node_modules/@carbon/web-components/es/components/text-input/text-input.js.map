{"version":3,"file":"text-input.js","names":["LitElement","html","property","query","carbonElement","customElement","classMap","prefix","View16","ViewOff16","WarningFilled16","WarningAltFilled16","ifNonEmpty","FormMixin","ValidityMixin","INPUT_COLOR_SCHEME","INPUT_SIZE","INPUT_TOOLTIP_ALIGNMENT","INPUT_TOOLTIP_DIRECTION","INPUT_TYPE","styles","CDSTextInput","_decorate","_initialize","_ValidityMixin","constructor","args","F","d","kind","key","value","_handleSlotChange","target","hasContent","assignedNodes","filter","elem","matches","undefined","slugItem","_hasSlug","Boolean","setAttribute","requestUpdate","decorators","_handleInput","_handleFormdata","event","formData","disabled","name","append","type","reflect","attribute","Number","MEDIUM","CENTER","BOTTOM","TEXT","_input","_value","oldValue","handleTogglePasswordVisibility","PASSWORD","render","enableCounter","helperText","hideLabel","inline","invalid","invalidText","label","maxCount","readonly","required","size","warn","warnText","handleInput","hasSlug","handleSlotChange","invalidIcon","class","warnIcon","normalizedProps","icon","counterClasses","inputWrapperClasses","inputClasses","fieldOuterWrapperClasses","fieldWrapperClasses","labelClasses","helperTextClasses","passwordIsVisible","passwordVisibilityIcon","passwordVisibilityToggleClasses","tooltipDirection","tooltipAlignment","passwordButtonLabel","_t","_","hidePasswordLabel","showPasswordLabel","passwordVisibilityButton","_t2","textCount","length","counter","_t3","labelText","_t4","labelWrapper","_t5","helper","_t6","_t7","_t8","autocomplete","autofocus","pattern","placeholder","showPasswordVisibilityToggle","updated","_this$shadowRoot","_this$querySelector","shadowRoot","querySelector","classList","toggle","hasAttribute","static","_objectSpread","shadowRootOptions","delegatesFocus"],"sources":["components/text-input/text-input.ts"],"sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2024\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { LitElement, html } from 'lit';\nimport { property, query } from 'lit/decorators.js';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { prefix } from '../../globals/settings';\nimport View16 from '@carbon/icons/lib/view/16';\nimport ViewOff16 from '@carbon/icons/lib/view--off/16';\nimport WarningFilled16 from '@carbon/icons/lib/warning--filled/16';\nimport WarningAltFilled16 from '@carbon/icons/lib/warning--alt--filled/16';\nimport ifNonEmpty from '../../globals/directives/if-non-empty';\nimport FormMixin from '../../globals/mixins/form';\nimport ValidityMixin from '../../globals/mixins/validity';\nimport {\n  INPUT_COLOR_SCHEME,\n  INPUT_SIZE,\n  INPUT_TOOLTIP_ALIGNMENT,\n  INPUT_TOOLTIP_DIRECTION,\n  INPUT_TYPE,\n} from './defs';\nimport styles from './text-input.scss';\n\nexport {\n  INPUT_COLOR_SCHEME,\n  INPUT_SIZE,\n  INPUT_TOOLTIP_ALIGNMENT,\n  INPUT_TOOLTIP_DIRECTION,\n  INPUT_TYPE,\n};\n\n/**\n * Text Input element. Supports all the usual attributes for textual input types\n *\n * @element cds-text-input\n * @slot helper-text - The helper text.\n * @slot label-text - The label text.\n * @slot validity-message - The validity message. If present and non-empty, this input shows the UI of its invalid state.\n */\n@customElement(`${prefix}-text-input`)\nclass CDSTextInput extends ValidityMixin(FormMixin(LitElement)) {\n  /**\n   * `true` if there is a slug.\n   */\n  protected _hasSlug = false;\n\n  /**\n   * Handles `slotchange` event.\n   */\n  protected _handleSlotChange({ target }: Event) {\n    const hasContent = (target as HTMLSlotElement)\n      .assignedNodes()\n      .filter((elem) =>\n        (elem as HTMLElement).matches !== undefined\n          ? (elem as HTMLElement).matches(\n              (this.constructor as typeof CDSTextInput).slugItem\n            )\n          : false\n      );\n\n    this._hasSlug = Boolean(hasContent);\n    (hasContent[0] as HTMLElement).setAttribute('size', 'mini');\n    this.requestUpdate();\n  }\n  /**\n   * The underlying input element\n   */\n  @query('input')\n  protected _input!: HTMLInputElement;\n\n  /**\n   * The internal value.\n   */\n  protected _value = '';\n\n  /**\n   * Handles `oninput` event on the `<input>`.\n   *\n   * @param event The event.\n   * @param event.target The event target.\n   */\n  protected _handleInput({ target }: Event) {\n    this.value = (target as HTMLInputElement).value;\n  }\n\n  _handleFormdata(event: Event) {\n    const { formData } = event as any; // TODO: Wait for `FormDataEvent` being available in `lib.dom.d.ts`\n    const { disabled, name, value } = this;\n    if (!disabled) {\n      formData.append(name, value);\n    }\n  }\n\n  /**\n   * May be any of the standard HTML autocomplete options\n   */\n  @property()\n  autocomplete = '';\n\n  /**\n   * Sets the input to be focussed automatically on page load. Defaults to false\n   */\n  @property({ type: Boolean })\n  autofocus = false;\n\n  /**\n   * Controls the disabled state of the input\n   */\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  /**\n   * Specify whether to display the character counter\n   */\n  @property({ type: Boolean, attribute: 'enable-counter', reflect: true })\n  enableCounter = false;\n\n  /**\n   * The helper text.\n   */\n  @property({ attribute: 'helper-text' })\n  helperText = '';\n\n  /**\n   * Specify if the currently value is invalid.\n   */\n  @property({ type: Boolean, reflect: true })\n  invalid = false;\n\n  /**\n   * Message which is displayed if the value is invalid.\n   */\n  @property({ attribute: 'invalid-text' })\n  invalidText = '';\n\n  /**\n   * Max character count allowed for input. This is needed in order for enableCounter to display\n   */\n  @property({ type: Number, attribute: 'max-count', reflect: true })\n  maxCount;\n\n  /**\n   * Specify whether the control is currently in warning state\n   */\n  @property({ type: Boolean, reflect: true })\n  warn = false;\n\n  /**\n   * Provide the text that is displayed when the control is in warning state\n   */\n  @property({ attribute: 'warn-text' })\n  warnText = '';\n\n  /**\n   * Specify whether you want the underlying label to be visually hidden\n   */\n  @property({ attribute: 'hide-label', type: Boolean, reflect: true })\n  hideLabel = false;\n\n  /**\n   * Generic label that will be used as the textual representation of what this field is for\n   */\n  @property({ attribute: 'label' })\n  label = '';\n\n  /**\n   * Name for the input in the `FormData`\n   */\n  @property()\n  name = '';\n\n  /**\n   * Pattern to validate the input against for HTML validity checking\n   */\n  @property()\n  pattern = '';\n\n  /**\n   * Value to display when the input has an empty `value`\n   */\n  @property({ reflect: true })\n  placeholder = '';\n\n  /**\n   * Specify if the component should be read-only\n   */\n  @property({ type: Boolean, reflect: true })\n  readonly = false;\n\n  /**\n   * Boolean property to set the required status\n   */\n  @property({ type: Boolean, reflect: true })\n  required = false;\n\n  /**\n   * The special validity message for `required`.\n   */\n  @property({ attribute: 'required-validity-message' })\n  requiredValidityMessage = 'Please fill out this field.';\n\n  /**\n   * \"Hide password\" tooltip text on password visibility toggle\n   */\n  @property()\n  hidePasswordLabel = 'Hide password';\n\n  /**\n   * \"Show password\" tooltip text on password visibility toggle\n   */\n  @property()\n  showPasswordLabel = 'Show password';\n\n  /**\n   * Boolean property to render password visibility toggle\n   */\n  @property({\n    type: Boolean,\n    attribute: 'show-password-visibility-toggle',\n    reflect: true,\n  })\n  showPasswordVisibilityToggle = false;\n\n  /**\n   * The input box size.\n   */\n  @property({ reflect: true })\n  size = INPUT_SIZE.MEDIUM;\n\n  /**\n   * true to use the inline version.\n   */\n  @property({ type: Boolean, reflect: true })\n  inline = false;\n\n  /**\n   * Specify the alignment of the tooltip to the icon-only button.\n   * Can be one of: start, center, or end.\n   */\n  @property()\n  tooltipAlignment = INPUT_TOOLTIP_ALIGNMENT.CENTER;\n\n  /**\n   * Specify the direction of the tooltip for icon-only buttons.\n   * Can be either top, right, bottom, or left.\n   */\n  @property()\n  tooltipDirection = INPUT_TOOLTIP_DIRECTION.BOTTOM;\n\n  /**\n   * The type of the input. Can be one of the types listed in the INPUT_TYPE enum\n   */\n  @property({ reflect: true })\n  type = INPUT_TYPE.TEXT;\n\n  /**\n   * The validity message. If present and non-empty, this input shows the UI of its invalid state.\n   */\n  @property({ attribute: 'validity-message' })\n  validityMessage = '';\n\n  /**\n   * The value of the input.\n   */\n  @property({ reflect: true })\n  get value() {\n    // FIXME: Figure out how to deal with TS2611\n    // once we have the input we can directly query for the value\n    if (this._input) {\n      return this._input.value;\n    }\n    // but before then _value will work fine\n    return this._value;\n  }\n\n  set value(value) {\n    const oldValue = this._value;\n    this._value = value;\n    // make sure that lit-element updates the right properties\n    this.requestUpdate('value', oldValue);\n    // we set the value directly on the input (when available)\n    // so that programatic manipulation updates the UI correctly\n    if (this._input) {\n      this._input.value = value;\n    }\n  }\n\n  /**\n   * Handles password visibility toggle button click\n   */\n  private handleTogglePasswordVisibility() {\n    this.type =\n      this.type === INPUT_TYPE.PASSWORD ? INPUT_TYPE.TEXT : INPUT_TYPE.PASSWORD;\n  }\n\n  render() {\n    const {\n      disabled,\n      enableCounter,\n      helperText,\n      hideLabel,\n      inline,\n      invalid,\n      invalidText,\n      label,\n      maxCount,\n      readonly,\n      required,\n      size,\n      type,\n      warn,\n      warnText,\n      value,\n      _handleInput: handleInput,\n      _hasSlug: hasSlug,\n      _handleSlotChange: handleSlotChange,\n    } = this;\n\n    const invalidIcon = WarningFilled16({\n      class: `${prefix}--text-input__invalid-icon`,\n    });\n\n    const warnIcon = WarningAltFilled16({\n      class: `${prefix}--text-input__invalid-icon ${prefix}--text-input__invalid-icon--warning`,\n    });\n\n    const normalizedProps = {\n      disabled: !readonly && disabled,\n      invalid: !readonly && invalid,\n      warn: !readonly && !invalid && warn,\n      'slot-name': '',\n      'slot-text': '',\n      icon: null,\n    };\n\n    if (normalizedProps.invalid) {\n      normalizedProps.icon = invalidIcon;\n      normalizedProps['slot-name'] = 'invalid-text';\n      normalizedProps['slot-text'] = invalidText;\n    } else if (normalizedProps.warn) {\n      normalizedProps.icon = warnIcon;\n      normalizedProps['slot-name'] = 'warn-text';\n      normalizedProps['slot-text'] = warnText;\n    }\n\n    const counterClasses = classMap({\n      [`${prefix}--label`]: true,\n      [`${prefix}--text-input__label-counter`]: true,\n      [`${prefix}--label--disabled`]: disabled,\n    });\n\n    const inputWrapperClasses = classMap({\n      [`${prefix}--form-item`]: true,\n      [`${prefix}--text-input-wrapper`]: true,\n      [`${prefix}--text-input-wrapper--inline`]: inline,\n      [`${prefix}--text-input-wrapper--readonly`]: readonly,\n      [`${prefix}--text-input-wrapper--inline--invalid`]:\n        inline && normalizedProps.invalid,\n    });\n\n    const inputClasses = classMap({\n      [`${prefix}--text-input`]: true,\n      [`${prefix}--text-input--invalid`]: normalizedProps.invalid,\n      [`${prefix}--text-input--warning`]: normalizedProps.warn,\n      [`${prefix}--text-input--${size}`]: size,\n      [`${prefix}--layout--size-${size}`]: size,\n      [`${prefix}--password-input`]: type === INPUT_TYPE.PASSWORD,\n    });\n\n    const fieldOuterWrapperClasses = classMap({\n      [`${prefix}--text-input__field-outer-wrapper`]: true,\n      [`${prefix}--text-input__field-outer-wrapper--inline`]: inline,\n    });\n\n    const fieldWrapperClasses = classMap({\n      [`${prefix}--text-input__field-wrapper`]: true,\n      [`${prefix}--text-input__field-wrapper--warning`]: normalizedProps.warn,\n      [`${prefix}--text-input__field-wrapper--slug`]: hasSlug,\n    });\n\n    const labelClasses = classMap({\n      [`${prefix}--label`]: true,\n      [`${prefix}--visually-hidden`]: hideLabel,\n      [`${prefix}--label--disabled`]: normalizedProps.disabled,\n    });\n\n    const helperTextClasses = classMap({\n      [`${prefix}--form__helper-text`]: true,\n      [`${prefix}--form__helper-text--disabled`]: normalizedProps.disabled,\n    });\n\n    const passwordIsVisible = type !== INPUT_TYPE.PASSWORD;\n    const passwordVisibilityIcon = passwordIsVisible\n      ? ViewOff16({ class: `${prefix}--icon-visibility-off` })\n      : View16({ class: `${prefix}--icon-visibility-on` });\n\n    const passwordVisibilityToggleClasses = classMap({\n      [`${prefix}--text-input--password__visibility__toggle`]: true,\n      [`${prefix}--btn`]: true,\n      [`${prefix}--btn--icon-only`]: true,\n      [`${prefix}--tooltip__trigger`]: true,\n      [`${prefix}--tooltip--a11y`]: true,\n      [`${prefix}--btn--disabled`]: normalizedProps.disabled,\n      [`${prefix}--tooltip--${this.tooltipDirection}`]: this.tooltipDirection,\n      [`${prefix}--tooltip--align-${this.tooltipAlignment}`]:\n        this.tooltipAlignment,\n    });\n\n    const passwordButtonLabel = html`\n      <span class=\"${prefix}--assistive-text\">\n        ${passwordIsVisible ? this.hidePasswordLabel : this.showPasswordLabel}\n      </span>\n    `;\n\n    const passwordVisibilityButton = () => html`\n      <button\n        type=\"button\"\n        class=\"${passwordVisibilityToggleClasses}\"\n        ?disabled=\"${normalizedProps.disabled}\"\n        @click=\"${this.handleTogglePasswordVisibility}\">\n        ${!normalizedProps.disabled ? passwordButtonLabel : null}\n        ${passwordVisibilityIcon}\n      </button>\n    `;\n\n    const textCount = value?.length;\n\n    const counter =\n      enableCounter && maxCount\n        ? html` <label class=\"${counterClasses}\">\n            <slot name=\"label-text\">${textCount}/${maxCount}</slot>\n          </label>`\n        : null;\n\n    const labelText =\n      label && !hideLabel\n        ? html`<label class=\"${labelClasses}\"> ${label} </label>`\n        : null;\n\n    const labelWrapper = html`<div class=\"${prefix}--text-input__label-wrapper\">\n      ${labelText} ${counter}\n    </div>`;\n\n    const helper = helperText\n      ? html`<div\n          class=\"${helperTextClasses}\"\n          id=\"helper-text\"\n          ?hidden=\"${normalizedProps.invalid || normalizedProps.warn}\">\n          <slot name=\"helper-text\"> ${helperText} </slot>\n        </div>`\n      : null;\n\n    return html`\n      <div class=\"${inputWrapperClasses}\">\n        ${!inline\n          ? labelWrapper\n          : html`<div class=\"${prefix}--text-input__label-helper-wrapper\">\n              ${labelWrapper} ${helper}\n            </div>`}\n        <div class=\"${fieldOuterWrapperClasses}\">\n          <div class=\"${fieldWrapperClasses}\" ?data-invalid=\"${invalid}\">\n            ${normalizedProps.icon}\n            <input\n              autocomplete=\"${this.autocomplete}\"\n              ?autofocus=\"${this.autofocus}\"\n              class=\"${inputClasses}\"\n              ?data-invalid=\"${invalid}\"\n              ?disabled=\"${disabled}\"\n              aria-describedby=\"helper-text\"\n              id=\"input\"\n              name=\"${ifNonEmpty(this.name)}\"\n              pattern=\"${ifNonEmpty(this.pattern)}\"\n              placeholder=\"${ifNonEmpty(this.placeholder)}\"\n              ?readonly=\"${readonly}\"\n              ?required=\"${required}\"\n              type=\"${ifNonEmpty(type)}\"\n              .value=\"${this._value}\"\n              maxlength=\"${ifNonEmpty(maxCount)}\"\n              @input=\"${handleInput}\" />\n            <slot name=\"slug\" @slotchange=\"${handleSlotChange}\"></slot>\n            ${this.showPasswordVisibilityToggle &&\n            (type === INPUT_TYPE.PASSWORD || type === INPUT_TYPE.TEXT)\n              ? passwordVisibilityButton()\n              : null}\n          </div>\n          ${!inline ? helper : null}\n          <div\n            class=\"${prefix}--form-requirement\"\n            ?hidden=\"${!normalizedProps.invalid && !normalizedProps.warn}\">\n            <slot name=\"${normalizedProps['slot-name']}\">\n              ${normalizedProps['slot-text']}\n            </slot>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  updated() {\n    this.shadowRoot\n      ?.querySelector(\"slot[name='slug']\")\n      ?.classList.toggle(\n        `${prefix}--slug--revert`,\n        this.querySelector(`${prefix}-slug`)?.hasAttribute('revert-active')\n      );\n  }\n\n  /**\n   * A selector that will return the slug item.\n   */\n  static get slugItem() {\n    return `${prefix}-slug`;\n  }\n\n  static shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader\n}\n\nexport default CDSTextInput;\n"],"mappings":"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","ignoreList":[]}