{"version":3,"file":"skeleton-text.js","names":["classMap","LitElement","html","property","prefix","SKELETON_TEXT_TYPE","styles","carbonElement","customElement","getRandomInt","min","max","n","randoms","Math","floor","CDSSkeletonText","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","reflect","attribute","key","value","REGULAR","type","Boolean","Number","render","optionalClasses","paragraph","lineCount","width","defaultClasses","HEADING","outputObject","split","forEach","element","_objectSpread","classes","widthNum","parseInt","widthPx","includes","widthPercent","lines","i","randomWidth","style","push","_t","_","_t2","static"],"sources":["components/skeleton-text/skeleton-text.ts"],"sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2024\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { classMap } from 'lit/directives/class-map.js';\nimport { LitElement, TemplateResult, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { prefix } from '../../globals/settings';\nimport { SKELETON_TEXT_TYPE } from './defs';\nimport styles from './skeleton-text.scss';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\nexport { SKELETON_TEXT_TYPE };\n\nfunction getRandomInt(min: number, max: number, n: number) {\n  const randoms = [0.973051493507435, 0.15334737213558558, 0.5671034553053769];\n  return Math.floor(randoms[n % 3] * (max - min + 1)) + min;\n}\n\n/**\n * Skeleton text.\n *\n * @element cds-skeleton-text\n */\n@customElement(`${prefix}-skeleton-text`)\nclass CDSSkeletonText extends LitElement {\n  /**\n   * Specify optional classes to be added to your SkeletonText\n   */\n  @property({ reflect: true, attribute: 'optional-classes' })\n  optionalClasses;\n\n  /**\n   * The type of skeleton text.\n   */\n  @property({ reflect: true })\n  type = SKELETON_TEXT_TYPE.REGULAR;\n\n  /**\n   * width (in px or %) of single line of text or max-width of paragraph lines\n   */\n  @property({ reflect: true })\n  width = '100%';\n\n  /**\n   * will generate multiple lines of text\n   */\n  @property({ type: Boolean, reflect: true })\n  paragraph = false;\n\n  /**\n   * the number of lines in a paragraph\n   */\n  @property({ type: Number, reflect: true })\n  lineCount = 3;\n\n  render() {\n    const { optionalClasses, paragraph, lineCount, type, width } = this;\n    let defaultClasses = {\n      [`${prefix}--skeleton__text`]: true,\n      [`${prefix}--skeleton__heading`]: type === SKELETON_TEXT_TYPE.HEADING,\n    };\n\n    if (optionalClasses) {\n      const outputObject = {};\n      optionalClasses?.split(' ').forEach((element) => {\n        outputObject[element] = true;\n      });\n      defaultClasses = { ...defaultClasses, ...outputObject };\n    }\n    const classes = classMap(defaultClasses);\n\n    if (paragraph) {\n      const widthNum = parseInt(this.width, 10);\n      const widthPx = this.width.includes('px');\n      const widthPercent = this.width.includes('%');\n      const lines: TemplateResult[] = [];\n      for (let i = 0; i < lineCount; i++) {\n        const randomWidth =\n          (widthPercent && `${getRandomInt(0, 75, i)}px`) ||\n          (widthPx && `${getRandomInt(0, widthNum, i)}px`);\n        const style =\n          (widthPercent && `width: calc(${width} - ${randomWidth})`) ||\n          (widthPx && `width: ${randomWidth}`) ||\n          '';\n        lines.push(html`<p class=\"${classes}\" style=\"${style}\"></p>`);\n      }\n      return lines;\n    }\n\n    return html`<p class=\"${classes}\" style=\"width:${width}\"></p>`;\n  }\n\n  static styles = styles;\n}\n\nexport default CDSSkeletonText;\n"],"mappings":"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","ignoreList":[]}