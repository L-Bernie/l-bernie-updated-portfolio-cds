{"version":3,"file":"ai-skeleton-text.js","names":["LitElement","html","property","prefix","styles","carbonElement","customElement","CDSAISkeletonText","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","type","Boolean","reflect","key","value","Number","render","heading","width","lineCount","paragraph","_t","_","static"],"sources":["components/ai-skeleton/ai-skeleton-text.ts"],"sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2024\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { LitElement, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { prefix } from '../../globals/settings';\nimport styles from './ai-skeleton.scss';\nimport '../skeleton-text/skeleton-text';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\n/**\n * AI skeleton text.\n *\n * @element cds-ai-skeleton-text\n */\n@customElement(`${prefix}-ai-skeleton-text`)\nclass CDSAISkeletonText extends LitElement {\n  /**\n   * Generates skeleton text at a larger size.\n   */\n  @property({ type: Boolean, reflect: true })\n  heading = false;\n\n  /**\n   * width (in px or %) of single line of text or max-width of paragraph lines\n   */\n  @property({ reflect: true })\n  width = '100%';\n\n  /**\n   * will generate multiple lines of text\n   */\n  @property({ type: Boolean, reflect: true })\n  paragraph = false;\n\n  /**\n   * the number of lines in a paragraph\n   */\n  @property({ type: Number, reflect: true })\n  lineCount = 3;\n\n  render() {\n    const { heading, width, lineCount, paragraph } = this;\n    return html`<cds-skeleton-text\n      type=\"${heading ? 'heading' : ''}\"\n      width=\"${width}\"\n      linecount=\"${lineCount}\"\n      ?paragraph=\"${paragraph}\"\n      optional-classes=\"${prefix}--skeleton__text--ai\"></cds-skeleton-text>`;\n  }\n\n  static styles = styles;\n}\n\nexport default CDSAISkeletonText;\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,UAAU,EAAEC,IAAI,QAAQ,KAAK;AACtC,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,MAAM,QAAQ,wBAAwB;AAC/C,OAAOC,MAAM,MAAM,wBAAoB;AACvC,OAAO,gCAAgC;AACvC,SAASC,aAAa,IAAIC,aAAa,QAAQ,yCAAyC;;AAExF;AACA;AACA;AACA;AACA;AAJA,IAMMC,iBAAiB,GAAAC,SAAA,EADtBF,aAAa,CAAC,GAAGH,MAAM,mBAAmB,CAAC,aAAAM,WAAA,EAAAC,WAAA;EAA5C,MACMH,iBAAiB,SAAAG,WAAA,CAAoB;IAAAC,YAAA,GAAAC,IAAA;MAAA,SAAAA,IAAA;MAAAH,WAAA;IAAA;EAoC3C;EAAC;IAAAI,CAAA,EApCKN,iBAAiB;IAAAO,CAAA;MAAAC,IAAA;MAAAC,UAAA,GAIpBd,QAAQ,CAAC;QAAEe,IAAI,EAAEC,OAAO;QAAEC,OAAO,EAAE;MAAK,CAAC,CAAC;MAAAC,GAAA;MAAAC,MAAA;QAAA,OACjC,KAAK;MAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAKdd,QAAQ,CAAC;QAAEiB,OAAO,EAAE;MAAK,CAAC,CAAC;MAAAC,GAAA;MAAAC,MAAA;QAAA,OACpB,MAAM;MAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAKbd,QAAQ,CAAC;QAAEe,IAAI,EAAEC,OAAO;QAAEC,OAAO,EAAE;MAAK,CAAC,CAAC;MAAAC,GAAA;MAAAC,MAAA;QAAA,OAC/B,KAAK;MAAA;IAAA;MAAAN,IAAA;MAAAC,UAAA,GAKhBd,QAAQ,CAAC;QAAEe,IAAI,EAAEK,MAAM;QAAEH,OAAO,EAAE;MAAK,CAAC,CAAC;MAAAC,GAAA;MAAAC,MAAA;QAAA,OAC9B,CAAC;MAAA;IAAA;MAAAN,IAAA;MAAAK,GAAA;MAAAC,KAAA;MAtBb;AACF;AACA;;MAIE;AACF;AACA;;MAIE;AACF;AACA;;MAIE;AACF;AACA;;MAIE,SAAAE,MAAMA,CAAA,EAAG;QACP,MAAM;UAAEC,OAAO;UAAEC,KAAK;UAAEC,SAAS;UAAEC;QAAU,CAAC,GAAG,IAAI;QACrD,OAAO1B,IAAI,CAAA2B,EAAA,KAAAA,EAAA,GAAAC,CAAA;AACf,cADe;AACf,eADe;AACf,mBADe;AACf,oBADe;AACf,0BADe,gDACDL,OAAO,GAAG,SAAS,GAAG,EAAE,EACvBC,KAAK,EACDC,SAAS,EACRC,SAAS,EACHxB,MAAM;MAC9B;IAAC;MAAAY,IAAA;MAAAe,MAAA;MAAAV,GAAA;MAAAC,MAAA;QAAA,OAEejB,MAAM;MAAA;IAAA;EAAA;AAAA,GAnCQJ,UAAU;AAsC1C,eAAeO,iBAAiB","ignoreList":[]}