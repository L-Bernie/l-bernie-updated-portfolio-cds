{"version":3,"file":"checkbox-group.js","names":["classMap","LitElement","html","property","prefix","WarningFilled16","WarningAltFilled16","styles","carbonElement","customElement","CDSCheckboxGroup","_decorate","_initialize","_LitElement","constructor","args","F","d","kind","decorators","type","String","reflect","attribute","key","value","Boolean","_handleSlotChange","target","hasContent","assignedNodes","filter","elem","matches","undefined","slugItem","_hasSlug","setAttribute","requestUpdate","updated","changedProperties","selectorCheckbox","checkboxes","querySelectorAll","forEach","name","has","invalid","removeAttribute","render","ariaLabelledBy","disabled","helperText","invalidText","legendId","legendText","readonly","warn","warnText","hasSlug","handleSlotChange","showWarning","showHelper","checkboxGroupInstanceId","Math","random","toString","slice","helperId","helper","_t","_","fieldsetClasses","_t2","_t3","class","_t4","static","_objectSpread","shadowRootOptions","delegatesFocus"],"sources":["components/checkbox/checkbox-group.ts"],"sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { classMap } from 'lit/directives/class-map.js';\nimport { LitElement, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { prefix } from '../../globals/settings';\nimport WarningFilled16 from '@carbon/icons/lib/warning--filled/16';\nimport WarningAltFilled16 from '@carbon/icons/lib/warning--alt--filled/16';\nimport CDSCheckbox from './checkbox';\nimport styles from './checkbox.scss';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\n/**\n * Check box.\n *\n * @element cds-checkbox\n * @fires cds-checkbox-changed - The custom event fired after this changebox changes its checked state.\n * @csspart input The checkbox.\n * @csspart label The label.\n */\n@customElement(`${prefix}-checkbox-group`)\nclass CDSCheckboxGroup extends LitElement {\n  /**\n   * fieldset `aria-labelledby`\n   */\n  @property({ type: String, reflect: true, attribute: 'aria-labelledby' })\n  ariaLabelledBy;\n\n  /**\n   * Specify whether the form group is currently disabled\n   */\n  @property({ type: Boolean })\n  disabled;\n\n  /**\n   * Provide text for the form group for additional help\n   */\n  @property({ type: String, reflect: true, attribute: 'helper-text' })\n  helperText;\n\n  /**\n   * Specify whether the form group is currently invalid\n   */\n  @property({ type: Boolean, attribute: 'invalid' })\n  invalid;\n\n  /**\n   * Provide the text that is displayed when the form group is in an invalid state\n   */\n  @property({ type: String, reflect: true, attribute: 'invalid-text' })\n  invalidText;\n\n  /**\n   * Provide id for the fieldset <legend> which corresponds to the fieldset\n   * `aria-labelledby`\n   */\n  @property({ type: String, reflect: true, attribute: 'legend-id' })\n  legendId;\n\n  /**\n   * Provide the text to be rendered inside of the fieldset <legend>\n   */\n  @property({ type: String, reflect: true, attribute: 'legend-text' })\n  legendText;\n\n  /**\n   * Whether the CheckboxGroup should be read-only\n   */\n  @property({ type: Boolean, reflect: true })\n  readonly = false;\n\n  /**\n   * Specify whether the form group is currently in warning state\n   */\n  @property({ type: Boolean, reflect: true })\n  warn = false;\n\n  /**\n   * Provide the text that is displayed when the form group is in warning state\n   */\n  @property({ type: String, reflect: true, attribute: 'warn-text' })\n  warnText = '';\n\n  /*\n   * Handles `slotchange` event.\n   */\n  protected _handleSlotChange({ target }: Event) {\n    const hasContent = (target as HTMLSlotElement)\n      .assignedNodes()\n      .filter((elem) =>\n        (elem as HTMLElement).matches !== undefined\n          ? (elem as HTMLElement).matches(\n              (this.constructor as typeof CDSCheckboxGroup).slugItem\n            )\n          : false\n      );\n\n    this._hasSlug = Boolean(hasContent);\n    (hasContent[0] as HTMLElement).setAttribute('size', 'mini');\n    this.requestUpdate();\n  }\n\n  /**\n   * `true` if there is a slug.\n   */\n  protected _hasSlug = false;\n\n  updated(changedProperties) {\n    const { selectorCheckbox } = this.constructor as typeof CDSCheckboxGroup;\n    const checkboxes = this.querySelectorAll(selectorCheckbox);\n    ['disabled', 'readonly'].forEach((name) => {\n      if (changedProperties.has(name)) {\n        const { [name as keyof CDSCheckboxGroup]: value } = this;\n        // Propagate the property to descendants until `:host-context()` gets supported in all major browsers\n        checkboxes.forEach((elem) => {\n          (elem as CDSCheckbox)[name] = value;\n        });\n      }\n    });\n    if (changedProperties.has('invalid')) {\n      const { invalid } = this;\n      checkboxes.forEach((elem) => {\n        if (invalid) {\n          (elem as CDSCheckbox).setAttribute('invalid-group', '');\n        } else {\n          (elem as CDSCheckbox).removeAttribute('invalid-group');\n        }\n      });\n    }\n  }\n\n  render() {\n    const {\n      ariaLabelledBy,\n      disabled,\n      helperText,\n      invalid,\n      invalidText,\n      legendId,\n      legendText,\n      readonly,\n      warn,\n      warnText,\n      _hasSlug: hasSlug,\n      _handleSlotChange: handleSlotChange,\n    } = this;\n\n    const showWarning = !readonly && !invalid && warn;\n    const showHelper = !invalid && !warn;\n\n    const checkboxGroupInstanceId = Math.random().toString(16).slice(2);\n\n    const helperId = !helperText\n      ? undefined\n      : `checkbox-group-helper-text-${checkboxGroupInstanceId}`;\n\n    const helper = helperText\n      ? html` <div id=\"${helperId}\" class=\"${prefix}--form__helper-text\">\n          ${helperText}\n        </div>`\n      : null;\n\n    const fieldsetClasses = classMap({\n      [`${prefix}--checkbox-group`]: true,\n      [`${prefix}--checkbox-group--readonly`]: readonly,\n      [`${prefix}--checkbox-group--invalid`]: !readonly && invalid,\n      [`${prefix}--checkbox-group--warning`]: showWarning,\n      [`${prefix}--checkbox-group--slug`]: hasSlug,\n    });\n\n    return html`\n      <fieldset\n        class=\"${fieldsetClasses}\"\n        ?data-invalid=${invalid}\n        ?disabled=${disabled}\n        aria-readonly=${readonly}\n        ?aria-labelledby=${ariaLabelledBy || legendId}\n        ?aria-describedby=${!invalid && !warn && helper ? helperId : undefined}>\n        <legend class=\"${prefix}--label\" id=${legendId || ariaLabelledBy}>\n          ${legendText}\n          <slot name=\"slug\" @slotchange=\"${handleSlotChange}\"></slot>\n        </legend>\n        <slot></slot>\n        <div class=\"${prefix}--checkbox-group__validation-msg\">\n          ${!readonly && invalid\n            ? html`\n                ${WarningFilled16({\n                  class: `${prefix}--checkbox__invalid-icon`,\n                })}\n                <div class=\"${prefix}--form-requirement\">${invalidText}</div>\n              `\n            : null}\n          ${showWarning\n            ? html`\n                ${WarningAltFilled16({\n                  class: `${prefix}--checkbox__invalid-icon ${prefix}--checkbox__invalid-icon--warning`,\n                })}\n                <div class=\"${prefix}--form-requirement\">${warnText}</div>\n              `\n            : null}\n        </div>\n        ${showHelper ? helper : null}\n      </fieldset>\n    `;\n  }\n\n  /**\n   * A selector that will return the checkboxes.\n   */\n  static get selectorCheckbox() {\n    return `${prefix}-checkbox`;\n  }\n\n  /**\n   * A selector that will return the slug item.\n   */\n  static get slugItem() {\n    return `${prefix}-slug`;\n  }\n\n  static shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader\n}\n\nexport default CDSCheckboxGroup;\n"],"mappings":"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","ignoreList":[]}