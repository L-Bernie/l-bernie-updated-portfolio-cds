import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _decorate from "@babel/runtime/helpers/esm/decorate";
let _ = t => t,
  _t;
/**
 * @license
 *
 * Copyright IBM Corp. 2019, 2024
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { classMap } from 'lit/directives/class-map.js';
import { LitElement, html } from 'lit';
import { property } from 'lit/decorators.js';
import { prefix } from '../../globals/settings';
import styles from "././skeleton-placeholder.css.js";
import { carbonElement as customElement } from '../../globals/decorators/carbon-element';

/**
 * Skeleton placeholder.
 *
 * @element cds-skeleton-placeholder
 */
let CDSSkeletonPlaceholder = _decorate([customElement(`${prefix}-skeleton-placeholder`)], function (_initialize, _LitElement) {
  class CDSSkeletonPlaceholder extends _LitElement {
    constructor(...args) {
      super(...args);
      _initialize(this);
    }
  }
  return {
    F: CDSSkeletonPlaceholder,
    d: [{
      kind: "field",
      decorators: [property({
        reflect: true,
        attribute: 'optional-classes'
      })],
      key: "optionalClasses",
      value: void 0
    }, {
      kind: "method",
      key: "render",
      value:
      /**
       * Specify optional classes to be added to your SkeletonText
       */

      function render() {
        let defaultClasses = {
          [`${prefix}--skeleton__placeholder`]: true
        };
        if (this.optionalClasses) {
          var _this$optionalClasses;
          const outputObject = {};
          (_this$optionalClasses = this.optionalClasses) === null || _this$optionalClasses === void 0 || _this$optionalClasses.split(' ').forEach(element => {
            outputObject[element] = true;
          });
          defaultClasses = _objectSpread(_objectSpread({}, defaultClasses), outputObject);
        }
        const classes = classMap(defaultClasses);
        return html(_t || (_t = _` <div class="${0}"></div> `), classes);
      }
    }, {
      kind: "field",
      static: true,
      key: "styles",
      value() {
        return styles;
      }
    }]
  };
}, LitElement);
export default CDSSkeletonPlaceholder;
//# sourceMappingURL=skeleton-placeholder.js.map
