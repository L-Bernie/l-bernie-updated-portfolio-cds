{"version":3,"file":"file-uploader-drop-container.js","names":["classMap","LitElement","html","property","prefix","HostListenerMixin","HostListener","ifNonEmpty","styles","carbonElement","customElement","FORM_ELEMENT_COLOR_SCHEME","TILE_COLOR_SCHEME","dropEffects","dragover","dragleave","CDSFileUploaderDropContainer","_decorate","_initialize","_HostListenerMixin","constructor","args","F","d","kind","key","value","_handleChange","event","_ref","_this$shadowRoot","eventChange","selectorInput","files","type","dataTransfer","target","addedFiles","_getFiles","dispatchEvent","CustomEvent","bubbles","composed","detail","fileInput","shadowRoot","querySelector","decorators","_handleDrag","preventDefault","disabled","dropEffect","_active","requestUpdate","accept","test","Array","from","acceptedTypes","Set","split","prototype","filter","call","name","mimeType","_fileExtensionRegExp$","fileExtensionRegExp","hasFileExtension","fileExtension","undefined","exec","has","Boolean","reflect","render","multiple","active","handleChange","labelClasses","dropareaClasses","_t","_","static"],"sources":["components/file-uploader/file-uploader-drop-container.ts"],"sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2020, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { classMap } from 'lit/directives/class-map.js';\nimport { LitElement, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { prefix } from '../../globals/settings';\nimport HostListenerMixin from '../../globals/mixins/host-listener';\nimport HostListener from '../../globals/decorators/host-listener';\nimport ifNonEmpty from '../../globals/directives/if-non-empty';\nimport styles from './file-uploader.scss';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\nexport { FORM_ELEMENT_COLOR_SCHEME as TILE_COLOR_SCHEME } from '../../globals/shared-enums';\n\n/**\n * The value to set to `event.dataTransfer.dropEffect`, keyed by the event nane.\n */\nconst dropEffects = {\n  dragover: 'copy',\n  dragleave: 'move',\n};\n\n/**\n * File uploader drop container.\n *\n * @element cds-file-uploader-drop-container\n * @fires cds-file-uploader-drop-container-changed The custom event fired when there is a user gesture to select files to upload.\n */\n@customElement(`${prefix}-file-uploader-drop-container`)\nclass CDSFileUploaderDropContainer extends HostListenerMixin(LitElement) {\n  /**\n   * `true` to show the active state of this UI.\n   */\n  private _active = false;\n\n  /**\n   * Handles user gesture to select files to upload.\n   *\n   * @param event The event.\n   */\n  private _handleChange(event: Event | DragEvent) {\n    const { eventChange, selectorInput } = this\n      .constructor as typeof CDSFileUploaderDropContainer;\n    const { files } =\n      (event.type === 'drop'\n        ? (event as DragEvent).dataTransfer\n        : (event.target as HTMLInputElement)) ?? {};\n    const addedFiles = this._getFiles(event, files);\n\n    this.dispatchEvent(\n      new CustomEvent(eventChange, {\n        bubbles: true,\n        composed: true,\n        detail: {\n          addedFiles,\n        },\n      })\n    );\n\n    const fileInput = this?.shadowRoot?.querySelector(selectorInput);\n    if (fileInput) {\n      (fileInput as HTMLInputElement).value = ''; // carbon-web-components#904\n    }\n  }\n\n  /**\n   * Handles `dragover`, `dragleave` and `drop` events.\n   *\n   * @param event The event.\n   */\n  @HostListener('dragover')\n  @HostListener('dragleave')\n  @HostListener('drop')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleDrag(event: DragEvent) {\n    event.preventDefault(); // Prevents page navigation upon dropping\n    if (this.disabled) {\n      return;\n    }\n    const { dataTransfer, type } = event;\n    const dropEffect = dropEffects[type];\n    if (dataTransfer && dropEffect) {\n      dataTransfer.dropEffect = dropEffect;\n    }\n    this._active = type === 'dragover';\n    if (type === 'drop') {\n      this._handleChange(event);\n    }\n    this.requestUpdate();\n  }\n\n  /**\n   * @param event The event.\n   * @returns The list of files user chose to upload.\n   */\n  private _getFiles(event, files) {\n    const { accept } = this;\n    if (!accept || !/^(change|drop)$/.test(event.type)) {\n      return Array.from(files ?? []);\n    }\n    const acceptedTypes = new Set(accept.split(' '));\n    return Array.prototype.filter.call(\n      files,\n      ({ name, type: mimeType = '' }) => {\n        const fileExtensionRegExp = /\\.[^.]+$/;\n        const hasFileExtension = fileExtensionRegExp.test(name);\n        const [fileExtension] = !hasFileExtension\n          ? [undefined]\n          : fileExtensionRegExp.exec(name) ?? [];\n\n        return (\n          acceptedTypes.has(mimeType) ||\n          (fileExtension && acceptedTypes.has(fileExtension))\n        );\n      }\n    ) as File[];\n  }\n\n  /**\n   * The file types the file input should accept, separated by space.\n   */\n  @property()\n  accept = '';\n\n  /**\n   * `true` if this drop container should be disabled.\n   */\n  @property({ type: Boolean, reflect: true })\n  disabled = false;\n\n  /**\n   * `true` if this drop container should accept more than one files at once.\n   * Note that even with `false` set here, user _can_ select multiple files one by one.\n   */\n  @property({ type: Boolean, reflect: true })\n  multiple = false;\n\n  /**\n   * The name of the input.\n   */\n  @property({ reflect: true })\n  name = '';\n\n  /**\n   * The shadow DOM slot to put this drop container in.\n   */\n  @property({ reflect: true })\n  slot = 'drop-container';\n\n  render() {\n    const {\n      accept,\n      disabled,\n      multiple,\n      name,\n      _active: active,\n      _handleChange: handleChange,\n    } = this;\n    const labelClasses = classMap({\n      [`${prefix}--file-browse-btn`]: true,\n      [`${prefix}--file-browse-btn--disabled`]: disabled,\n    });\n    const dropareaClasses = classMap({\n      [`${prefix}--file__drop-container`]: true,\n      [`${prefix}--file__drop-container--drag-over`]: active,\n    });\n    return html`\n      <label class=\"${labelClasses}\" for=\"file\" tabindex=\"0\">\n        <div class=\"${dropareaClasses}\" role=\"button\">\n          <slot></slot>\n          <input\n            id=\"file\"\n            type=\"file\"\n            name=\"${ifNonEmpty(name)}\"\n            class=\"${prefix}--file-input\"\n            tabindex=\"-1\"\n            accept=\"${ifNonEmpty(accept)}\"\n            ?disabled=\"${disabled}\"\n            ?multiple=\"${multiple}\"\n            @change=\"${handleChange}\" />\n        </div>\n      </label>\n    `;\n  }\n\n  /**\n   * The name of the custom event fired when there is a user gesture to select files to upload.\n   */\n  static get eventChange() {\n    return `${prefix}-file-uploader-drop-container-changed`;\n  }\n\n  /**\n   * A selector that will return the file `<input>`.\n   */\n  static get selectorInput() {\n    return `.${prefix}--file-input`;\n  }\n\n  static styles = styles;\n}\n\nexport default CDSFileUploaderDropContainer;\n"],"mappings":"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","ignoreList":[]}