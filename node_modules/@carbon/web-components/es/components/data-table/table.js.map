{"version":3,"file":"table.js","names":["LitElement","html","property","state","prefix","forEach","TABLE_SIZE","TABLE_SORT_DIRECTION","styles","carbonElement","customElement","HostListener","HostListenerMixin","CDSTable","_decorate","_initialize","_HostListenerMixin","constructor","args","F","d","kind","key","value","ASCENDING","DESCENDING","decorators","type","Boolean","reflect","attribute","customSortRow","lhs","rhs","collator","compare","rowText","searchString","toLowerCase","indexOf","LG","_handleSlotChange","target","hasContent","assignedNodes","some","node","nodeType","Node","TEXT_NODE","textContent","trim","withHeader","_handleSortAction","columnIndex","sortDirection","rows","_tableRows","sort","a","b","cellA","querySelectorAll","selectorTableRowCells","cellB","collationFactors","expandable","originalRows","expandedRows","_tableExpandedRows","mapping","reduce","acc","element","index","sortId","getAttribute","sortedWithExpanded","e","push","_tableBody","insertBefore","_handleFilterRows","unfilteredRows","elem","_elem$textContent","filtered","filterRows","_searchValue","_nextElementSibling$t","nextElementSibling","init","bubbles","cancelable","composed","detail","dispatchEvent","CustomEvent","eventTableFiltered","_handleDownload","data","elementsToArray","elements","Array","from","headerCells","selectorHeaderCell","_selectedRows","headerTitleArray","row","rowData","cells","cellText","headerTitle","blob","Blob","JSON","stringify","href","URL","createObjectURL","event","expanded","_tableHeaderRow","contains","columns","children","isSortable","setAttribute","hasAttribute","sortedHeader","eventTableSorted","_tableHeaderRow$shado","selected","_tableBatchActions","tableBatchActions","_tableToolbarContent","tableToolbarContent","tableHeaderRow","selectedRows","radio","removeAttribute","shadowRoot","querySelector","checked","includes","filter","_this$_selectedRows","active","length","selectedRowsCount","hasBatchActions","totalRows","headerCheckbox","allRowsSelected","indeterminate","selectedRow","eventTableRowSelect","tableRows","selectorTableExpandedRows","matches","eventTableRowSelectAll","_tableHeaderRow$shado2","click","connectedCallback","_superPropGet","firstUpdated","selectorTableBatchActions","_tableToolbar","selectorTableToolbar","selectorTableToolbarContent","selectorTableBody","selectorRowsWithHeader","selectorTableRow","_downloadButton","selectorToolbarDownload","onclick","bind","headerCount","updated","changedProperties","has","batchExpansion","isSelectable","Intl","Collator","locale","_enableSortAction","selectorTableCellOverflowMenu","cell","parentNode","overflowMenuOnHover","size","_this$_tableToolbar","selectorAllRows","tableBody","useZebraStyles","withRowSlugs","headersWithSlug","prototype","slice","call","headerCell","render","_t","_","_t2","_t3","isExpandable","column","static"],"sources":["components/data-table/table.ts"],"sourcesContent":["/**\n * @license\n *\n * Copyright IBM Corp. 2019, 2024\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { LitElement, html } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { prefix } from '../../globals/settings';\nimport { forEach } from '../../globals/internal/collection-helpers';\nimport { TABLE_SIZE, TABLE_SORT_DIRECTION } from './defs';\nimport styles from './data-table.scss';\nimport { carbonElement as customElement } from '../../globals/decorators/carbon-element';\n\nimport HostListener from '../../globals/decorators/host-listener';\nimport HostListenerMixin from '../../globals/mixins/host-listener';\nimport {\n  CDSRadioButton,\n  CDSTableBatchActions,\n  CDSTableCell,\n  CDSTableHeaderCell,\n  CDSTableHeaderRow,\n  CDSTableRow,\n  CDSTableToolbarSearch,\n} from '../..';\nimport CDSTableExpandedRow from './table-expanded-row';\n\nexport { TABLE_SIZE };\n\n/**\n * Data table.\n *\n * @element cds-table\n * @fires cds-table-header-cell-sort\n *   The name of the custom event fired before a new sort direction is set upon a user gesture.\n *   Cancellation of this event stops the user-initiated change in sort direction.\n * @fires cds-search input\n *   The name of the custom event fired during search bar input\n * @fires cds-table-change-selection-all\n *   The name of the custom event fired before header row is selected/unselected upon a user gesture.\n * @fires cds-table-row-change-selection\n *   The name of the custom event fired before a row is selected/unselected upon a user gesture.\n * @fires cds-table-batch-actions-cancel-clicked\n *   The name of the custom event fired after the Cancel button is clicked.\n * @fires cds-table-row-expando-toggled\n *   The name of the custom event fired after the expanded state of a row is toggled upon a user gesture.\n * @fires cds-table-row-selected\n *   The name of the custom event fired after a row has been selected.\n * @fires cds-table-row-all-selected\n *   The name of the custom event fired after all rows have been selected.\n * @fires cds-table-sorted\n *   The name of the custom event fired after the table has been sorted.\n * @fires cds-table-filtered\n *   The name of the custom event fired after the table has been filtered containing remaining rows.\n */\n@customElement(`${prefix}-table`)\nclass CDSTable extends HostListenerMixin(LitElement) {\n  /**\n   * The map of how sorting direction affects sorting order.\n   */\n  private collationFactors = {\n    [TABLE_SORT_DIRECTION.ASCENDING]: 1,\n    [TABLE_SORT_DIRECTION.DESCENDING]: -1,\n  };\n\n  /**\n   * Reference to download button\n   */\n  @state()\n  private _downloadButton;\n\n  /**\n   * Current search value for filtering\n   */\n  @state()\n  private _searchValue = '';\n\n  /**\n   * Table header row within component\n   */\n  @state()\n  private _tableHeaderRow;\n\n  /**\n   * Table body\n   */\n  @state()\n  private _tableBody;\n\n  /**\n   * Table expanded row within component\n   */\n  @state()\n  private _tableExpandedRows;\n\n  /**\n   * Table rows within component\n   */\n  @state()\n  private _tableRows;\n\n  /**\n   * Reference to the component containing batch actions\n   */\n  @state()\n  private _tableBatchActions;\n\n  /**\n   * Reference to the table toolbar\n   */\n  @state()\n  private _tableToolbar;\n\n  /**\n   * Reference to the table toolbar content\n   */\n  @state()\n  private _tableToolbarContent;\n\n  @state()\n  private _selectedRows: CDSTableRow[] = [];\n\n  /**\n   * `true` if this table should support batch expansion\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'batch-expansion' })\n  batchExpansion = false;\n\n  /**\n   * The g11n collator to use.\n   */\n  @property({ attribute: false })\n  collator;\n\n  /**\n   * @param lhs A value.\n   * @param rhs Another value.\n   * @param collator A custom collator.\n   * @returns\n   *   `0` if the given two values are equal\n   *   A negative value to sort `lhs` to an index lower than `rhs`\n   *   A positive value to sort `rhs` to an index lower than `lhs`\n   */\n  // eslint-disable-next-line class-methods-use-this\n  customSortRow(lhs, rhs, collator) {\n    if (typeof lhs === 'number' && typeof rhs === 'number') {\n      return lhs - rhs;\n    }\n    return collator.compare(lhs, rhs);\n  }\n\n  /**\n   * Specify whether the rows should be able to be expandable\n   */\n  @property({ type: Boolean, reflect: true })\n  expandable = false;\n\n  /**\n   * The method used when filtering the table with the search bar.\n   * Can be replaced with custom method.\n   *\n   * @param rowText A table row.\n   * @param searchString A search string.\n   * @returns `false` if the given table row matches the given search string.\n   */\n  @property()\n  filterRows = (rowText: string, searchString: string) =>\n    rowText.toLowerCase().indexOf(searchString.toLowerCase()) < 0;\n\n  /**\n   * The total headers\n   */\n  @property()\n  headerCount = 0;\n\n  /**\n   * `true` if this table contains selectable rows\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'is-selectable' })\n  isSelectable = false;\n\n  /**\n   * `true` if this table should support sorting.\n   */\n  @property({ type: Boolean, reflect: true, attribute: 'is-sortable' })\n  isSortable = false;\n\n  /**\n   * The table size.\n   */\n  @property({ reflect: true })\n  locale = 'en';\n\n  /**\n   * Specify whether the overflow menu (if it exists) should be shown always, or only on hover\n   */\n  @property({\n    type: Boolean,\n    reflect: true,\n    attribute: 'overflow-menu-on-hover',\n  })\n  overflowMenuOnHover = false;\n\n  /**\n   * Specify whether the control should be a radio button or inline checkbox\n   */\n  @property({ type: Boolean, reflect: true })\n  radio = false;\n\n  /**\n   * The table size.\n   */\n  @property({ reflect: true })\n  size = TABLE_SIZE.LG;\n\n  /**\n   * TODO: Uncomment when Carbon fully implements sticky header\n   * Specify whether the header should be sticky.\n   * Still experimental: may not work with every combination of table props\n   */\n  // @property({ type: Boolean, attribute: 'sticky-header', reflect: true })\n  // stickyHeader = false;\n\n  /**\n   *  If true, will use a width of 'auto' instead of 100%\n   */\n  @property({ type: Boolean, attribute: 'use-static-width', reflect: true })\n  useStaticWidth = false;\n\n  /**\n   *  true to add useZebraStyles striping.\n   */\n  @property({ type: Boolean, attribute: 'use-zebra-styles', reflect: true })\n  useZebraStyles = false;\n\n  @property({ type: Boolean, attribute: 'with-header', reflect: true })\n  withHeader;\n\n  /**\n   *  true if slugs are added in the rows\n   */\n  @property({ type: Boolean, attribute: 'with-row-slugs' })\n  withRowSlugs = false;\n\n  private _handleSlotChange({ target }: Event) {\n    const hasContent = (target as HTMLSlotElement)\n      .assignedNodes()\n      .some(\n        (node) => node.nodeType !== Node.TEXT_NODE || node!.textContent!.trim()\n      );\n    this.withHeader = hasContent;\n  }\n\n  private _handleSortAction(columnIndex, sortDirection) {\n    const rows = [...this._tableRows];\n\n    // regular row sorting\n    rows.sort((a, b) => {\n      const cellA = a.querySelectorAll(\n        (this.constructor as typeof CDSTable).selectorTableRowCells\n      )[columnIndex].textContent;\n      const cellB = b.querySelectorAll(\n        (this.constructor as typeof CDSTable).selectorTableRowCells\n      )[columnIndex].textContent;\n      return (\n        this.collationFactors[sortDirection] *\n        this.customSortRow(cellA, cellB, this.collator)\n      );\n    });\n\n    // take into account the expanded rows, mapping each expandable row to its original for proper reinsertion\n    if (this.expandable) {\n      const originalRows = [...this._tableRows];\n      const expandedRows = [...this._tableExpandedRows];\n\n      const mapping = originalRows.reduce((acc, element, index) => {\n        const sortId = element.getAttribute('sort-id');\n        acc[sortId] = expandedRows[index];\n        return acc;\n      }, {});\n\n      const sortedWithExpanded = [] as any;\n\n      rows.forEach((e) => {\n        const sortId = e.getAttribute('sort-id');\n        sortedWithExpanded.push(e);\n        sortedWithExpanded.push(mapping[sortId]);\n      });\n\n      sortedWithExpanded.forEach((e) => {\n        this._tableBody.insertBefore(e, null);\n      });\n    } else {\n      rows.forEach((e) => {\n        this._tableBody.insertBefore(e, null);\n      });\n    }\n  }\n\n  private _handleFilterRows() {\n    const unfilteredRows = [] as any;\n    forEach(this._tableRows, (elem) => {\n      let rowText = elem.textContent?.trim();\n      let filtered = this.filterRows(rowText as string, this._searchValue);\n      (elem as any).filtered = filtered;\n\n      if (filtered && this.expandable) {\n        rowText = (elem as any).nextElementSibling.textContent?.trim();\n        filtered = this.filterRows(rowText as string, this._searchValue);\n        (elem as any).filtered = filtered;\n      }\n\n      if (!filtered) {\n        unfilteredRows.push(elem);\n      }\n\n      if (this.expandable) {\n        (elem as any).nextElementSibling.filtered = filtered;\n      }\n    });\n\n    const init = {\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n      detail: {\n        unfilteredRows,\n      },\n    };\n    this.dispatchEvent(\n      new CustomEvent(\n        (this.constructor as typeof CDSTable).eventTableFiltered,\n        init\n      )\n    );\n  }\n\n  /**\n   * Download manager for selected rows.\n   */\n  private _handleDownload({ target }) {\n    const data = [] as any;\n\n    const elementsToArray = (elements) =>\n      Array.from(elements, (element) => (element as any).textContent);\n\n    const headerCells = this.querySelectorAll(\n      (this.constructor as typeof CDSTable).selectorHeaderCell\n    );\n    const rows = this._selectedRows;\n    const headerTitleArray = elementsToArray(headerCells);\n\n    rows.forEach((row) => {\n      const rowData = {};\n      const cells = elementsToArray(\n        row.querySelectorAll(\n          (this.constructor as typeof CDSTable).selectorTableRowCells\n        )\n      );\n\n      cells.forEach((cellText, index) => {\n        const headerTitle = headerTitleArray[index];\n        rowData[headerTitle] = cellText;\n      });\n\n      data.push(rowData);\n    });\n\n    const blob = new Blob([JSON.stringify(data)], { type: 'application/json' });\n\n    target.href = URL.createObjectURL(blob);\n  }\n\n  /**\n   * Handles batch expansion\n   */\n  @HostListener('eventExpandoToggle')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleBatchExpansion = async (event: CustomEvent) => {\n    const { detail, target } = event;\n    const { expanded } = detail;\n\n    if ((target as CDSTableHeaderRow) === this._tableHeaderRow) {\n      this._tableRows.forEach((e) => ((e as CDSTableRow).expanded = expanded));\n    }\n  };\n\n  /**\n   * Handles sorting the table depending on the column selected\n   */\n  @HostListener('eventBeforeSort')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleSort = async (event: CustomEvent) => {\n    const { detail, target } = event;\n    const { sortDirection } = detail;\n\n    if (!this.contains(target as any)) {\n      return;\n    }\n\n    const columns = [...this._tableHeaderRow.children];\n    const columnIndex = columns.indexOf(target);\n\n    columns.forEach((e) => {\n      if (e !== target && this.isSortable) {\n        e.setAttribute('sort-direction', 'none');\n      } else if (e.hasAttribute('is-sortable')) {\n        e.setAttribute('sort-direction', 'none');\n      }\n    });\n\n    this._handleSortAction(columnIndex, sortDirection);\n\n    const init = {\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n      detail: {\n        sortedHeader: columns[columnIndex],\n      },\n    };\n    this.dispatchEvent(\n      new CustomEvent(\n        (this.constructor as typeof CDSTable).eventTableSorted,\n        init\n      )\n    );\n\n    this._handleFilterRows();\n  };\n\n  /**\n   * Handles search input within the toolbar actions\n   */\n  @HostListener('eventSearchInput')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleSearchInput = async (event: CustomEvent) => {\n    const { detail, target } = event;\n\n    if (this.contains(target as CDSTableToolbarSearch)) {\n      const { value } = detail;\n      this._searchValue = value;\n      this._handleFilterRows();\n    }\n  };\n\n  /**\n   * Handles row selection\n   */\n  @HostListener('eventBeforeChangeSelection')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleRowSelect = async (event: CustomEvent) => {\n    const { detail, target } = event;\n    const { selected } = detail;\n    const {\n      _tableBatchActions: tableBatchActions,\n      _tableToolbarContent: tableToolbarContent,\n      _tableHeaderRow: tableHeaderRow,\n      _selectedRows: selectedRows,\n    } = this;\n\n    if (!this.contains(target as CDSTableRow)) {\n      return;\n    }\n\n    if (this.radio) {\n      this._tableRows.forEach((e) => {\n        if (e !== target) {\n          e.removeAttribute('selected');\n          e.shadowRoot!.querySelector(`${prefix}-radio-button`).checked = false;\n        }\n      });\n      this._selectedRows.push(...[target as CDSTableRow]);\n    } else {\n      if (selectedRows.includes(target as CDSTableRow)) {\n        this._selectedRows = selectedRows.filter((e) => e !== target);\n      } else {\n        selectedRows.push(target as CDSTableRow);\n      }\n\n      if (tableBatchActions) {\n        tableBatchActions.active = this._selectedRows?.length;\n        tableBatchActions.selectedRowsCount += selected ? 1 : -1;\n      }\n\n      if (tableToolbarContent) {\n        tableToolbarContent.hasBatchActions = this._selectedRows.length;\n      }\n    }\n\n    const totalRows = [...this._tableRows].filter(\n      (elem) => !elem.hasAttribute('filtered')\n    ).length;\n\n    // selected header checkbox upon all rows being selected\n    const headerCheckbox = tableHeaderRow.shadowRoot\n      ?.querySelector(`${prefix}-checkbox`)\n      .shadowRoot.querySelector(`.${prefix}--checkbox`);\n    const allRowsSelected = this._selectedRows.length === totalRows;\n    headerCheckbox.checked = !this._selectedRows.length ? false : true;\n    headerCheckbox.indeterminate =\n      !allRowsSelected && this._selectedRows.length > 0;\n\n    const init = {\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n      detail: {\n        selectedRow: target,\n        selectedRows: selectedRows,\n      },\n    };\n    this.dispatchEvent(\n      new CustomEvent(\n        (this.constructor as typeof CDSTable).eventTableRowSelect,\n        init\n      )\n    );\n  };\n\n  /**\n   * Handles header row selection, selecting/unselecting all rows\n   */\n  @HostListener('eventBeforeChangeSelectionAll')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleAllRowsSelect = async (event: CustomEvent) => {\n    const { detail, target } = event;\n    const { selected } = detail;\n    const {\n      _tableBatchActions: tableBatchActions,\n      _tableToolbarContent: tableToolbarContent,\n      _tableRows: tableRows,\n    } = this;\n\n    if (!this.contains(target as CDSTableRow)) {\n      return;\n    }\n\n    let totalRows = 0;\n    forEach(tableRows, (elem) => {\n      if (!(elem as CDSTableRow).filtered) {\n        (elem as CDSTableRow).selected = selected;\n        this.radio\n          ? ((\n              (elem as CDSTableRow).shadowRoot!.querySelector(\n                `${prefix}-radio-button`\n              ) as CDSRadioButton\n            ).checked = selected)\n          : null;\n        this._selectedRows.push(elem as CDSTableRow);\n        totalRows++;\n\n        const { selectorTableExpandedRows } = this\n          .constructor as typeof CDSTable;\n        const { nextElementSibling } = elem;\n\n        // selecting the expanded row as well\n        if (nextElementSibling?.matches(selectorTableExpandedRows)) {\n          (elem.nextElementSibling as CDSTableExpandedRow).selected = selected;\n        }\n      }\n    });\n\n    if (!selected) {\n      this._selectedRows = [];\n    }\n\n    if (tableBatchActions) {\n      tableBatchActions.selectedRowsCount = selected ? totalRows : 0;\n      tableBatchActions.active = selected;\n    }\n\n    if (tableToolbarContent) {\n      tableToolbarContent.hasBatchActions = selected;\n    }\n\n    const init = {\n      bubbles: true,\n      cancelable: true,\n      composed: true,\n      detail: {\n        selectedRows: this._selectedRows,\n      },\n    };\n    this.dispatchEvent(\n      new CustomEvent(\n        (this.constructor as typeof CDSTable).eventTableRowSelectAll,\n        init\n      )\n    );\n  };\n\n  /**\n   * Handles cancel button within the toolbar actions\n   */\n  @HostListener('eventClickCancel')\n  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to\n  private _handleCancelSelection = async (event: CustomEvent) => {\n    const { target } = event;\n    const { _tableHeaderRow: tableHeaderRow } = this;\n\n    if (this.contains(target as CDSTableBatchActions)) {\n      tableHeaderRow.shadowRoot\n        ?.querySelector(`${prefix}-checkbox`)\n        .shadowRoot.querySelector(`.${prefix}--checkbox`)\n        .click();\n    }\n  };\n\n  connectedCallback() {\n    if (!this.hasAttribute('role')) {\n      this.setAttribute('role', 'table');\n    }\n    super.connectedCallback();\n  }\n\n  firstUpdated() {\n    this._tableBatchActions = this.querySelector(\n      (this.constructor as typeof CDSTable).selectorTableBatchActions\n    );\n    this._tableToolbar = this.querySelector(\n      (this.constructor as typeof CDSTable).selectorTableToolbar\n    );\n    this._tableToolbarContent = this.querySelector(\n      (this.constructor as typeof CDSTable).selectorTableToolbarContent\n    );\n    this._tableBody = this.querySelector(\n      (this.constructor as typeof CDSTable).selectorTableBody\n    );\n    this._tableHeaderRow = this.querySelector(\n      (this.constructor as typeof CDSTable).selectorRowsWithHeader\n    );\n    this._tableExpandedRows = this.querySelectorAll(\n      (this.constructor as typeof CDSTable).selectorTableExpandedRows\n    );\n\n    this._tableRows = this.querySelectorAll(\n      (this.constructor as typeof CDSTable).selectorTableRow\n    );\n\n    this._downloadButton = this.querySelector(\n      (this.constructor as typeof CDSTable).selectorToolbarDownload\n    );\n    if (this._downloadButton) {\n      this._downloadButton.onclick = this._handleDownload.bind(this);\n    }\n    this.headerCount = this._tableHeaderRow.children.length;\n  }\n\n  updated(changedProperties) {\n    if (changedProperties.has('expandable')) {\n      this._tableRows.forEach((e, index) => {\n        e.expandable = this.expandable;\n        e.setAttribute('sort-id', index);\n      });\n      this._tableHeaderRow.expandable = this.expandable;\n      this._tableHeaderRow.batchExpansion = this.batchExpansion;\n      this.headerCount += this.expandable ? 1 : -1;\n    }\n\n    if (changedProperties.has('headerCount')) {\n      this._tableExpandedRows.forEach((e) => {\n        e.setAttribute('colspan', this.headerCount);\n      });\n    }\n\n    if (changedProperties.has('isSelectable')) {\n      if (this.isSelectable) {\n        this._tableHeaderRow.setAttribute('selection-name', 'header');\n        this._tableRows.forEach((e, index) => {\n          if (!e.hasAttribute('selection-name')) {\n            e.setAttribute('selection-name', index);\n          }\n        });\n      }\n      this.headerCount++;\n    }\n\n    if (changedProperties.has('locale')) {\n      this.collator = new Intl.Collator(this.locale);\n    }\n    if (changedProperties.has('isSortable')) {\n      if (this.isSortable) {\n        this._enableSortAction();\n      }\n    }\n\n    if (\n      changedProperties.has('overflowMenuOnHover') ||\n      changedProperties.has('size')\n    ) {\n      forEach(\n        this.querySelectorAll(\n          (this.constructor as typeof CDSTable).selectorTableCellOverflowMenu\n        ),\n        (elem) => {\n          const cell = elem.parentNode as CDSTableCell;\n          const row = cell.parentNode as CDSTableRow;\n          cell.overflowMenuOnHover = this.overflowMenuOnHover;\n          row.overflowMenuOnHover = this.overflowMenuOnHover;\n          cell.setAttribute('size', this.size);\n          elem.setAttribute('size', this.size);\n          elem.setAttribute('data-table', '');\n        }\n      );\n    }\n\n    if (changedProperties.has('radio')) {\n      // Propagate `size` attribute to descendants until `:host-context()` gets supported in all major browsers\n      forEach(\n        this.querySelectorAll(\n          (this.constructor as typeof CDSTable).selectorTableRow\n        ),\n        (elem) => {\n          (elem as CDSTableRow).radio = this.radio;\n        }\n      );\n    }\n\n    if (changedProperties.has('size')) {\n      // Propagate `size` attribute to descendants until `:host-context()` gets supported in all major browsers\n      forEach(\n        this.querySelectorAll(\n          (this.constructor as typeof CDSTable).selectorAllRows\n        ),\n        (elem) => {\n          elem.setAttribute('size', this.size);\n        }\n      );\n      this._tableToolbar?.setAttribute('size', this.size);\n    }\n\n    // TODO: Uncomment when Carbon fully implements Sticky header feature\n    // if (changedProperties.has('stickyHeader')) {\n    //   const tableBody = this.querySelector(\n    //     (this.constructor as typeof CDSTable).selectorTableBody\n    //   );\n    //   const tableHead = this.querySelector(\n    //     (this.constructor as typeof CDSTable).selectorTableHead\n    //   );\n    //   (tableBody as any).stickyHeader = this.stickyHeader;\n    //   (tableHead as any).stickyHeader = this.stickyHeader;\n    //   forEach(\n    //     this.querySelectorAll(\n    //       (this.constructor as typeof CDSTable).selectorRowsWithHeader\n    //     ),\n    //     (elem) => {\n    //       (elem as any).stickyHeader = this.stickyHeader;\n    //     }\n    //   );\n    //   forEach(\n    //     this.querySelectorAll(\n    //       (this.constructor as typeof CDSTable).selectorTableCells\n    //     ),\n    //     (elem) => {\n    //       (elem as any).stickyHeader = this.stickyHeader;\n    //     }\n    //   );\n    // }\n\n    if (changedProperties.has('useZebraStyles')) {\n      const tableBody = this.querySelector(\n        (this.constructor as typeof CDSTable).selectorTableBody\n      );\n      (tableBody as any).useZebraStyles = this.useZebraStyles;\n    }\n\n    if (this.withRowSlugs) {\n      this._tableHeaderRow.setAttribute('rows-with-slug', '');\n      this._tableRows.forEach((row) => {\n        row.setAttribute('rows-with-slug', '');\n      });\n    } else {\n      this._tableHeaderRow.removeAttribute('rows-with-slug');\n      this._tableRows.forEach((row) => {\n        row.removeAttribute('rows-with-slug');\n      });\n    }\n\n    // Gets table header info to add to the column cells for styles\n    const headersWithSlug: number[] = [];\n\n    Array.prototype.slice\n      .call(this._tableHeaderRow.children)\n      .forEach((headerCell, index) => {\n        if (headerCell.querySelector(`${prefix}-slug`)) {\n          headerCell.setAttribute('slug', '');\n          headersWithSlug.push(index);\n        } else {\n          headerCell.removeAttribute('slug');\n        }\n      });\n\n    this._tableRows.forEach((row) => {\n      Array.prototype.slice\n        .call((row as HTMLElement).children)\n        .forEach((cell, index) => {\n          headersWithSlug.includes(index)\n            ? cell.setAttribute('slug-in-header', '')\n            : cell.removeAttribute('slug-in-header');\n        });\n    });\n  }\n\n  /* eslint-disable no-constant-condition */\n  render() {\n    return html`\n      <div class=\"${prefix}--data-table-header-container\">\n        <div ?hidden=\"${!this.withHeader}\" class=\"${prefix}--data-table-header\">\n          <slot @slotchange=\"${this._handleSlotChange}\" name=\"title\"></slot>\n          <slot\n            @slotchange=\"${this._handleSlotChange}\"\n            name=\"description\"></slot>\n        </div>\n        <slot name=\"toolbar\"></slot>\n      </div>\n\n      ${false // TODO: replace with this.stickyHeader when feature is fully implemented\n        ? html` <div class=\"${prefix}--data-table_inner-container\">\n            <div class=\"${prefix}--data-table-content\">\n              <slot></slot>\n            </div>\n          </div>`\n        : html`<slot></slot>`}\n    `;\n  }\n\n  /**\n   * Adds isSortable value for table header cells.\n   */\n  _enableSortAction() {\n    const headerCells = this.querySelectorAll(\n      (this.constructor as typeof CDSTable).selectorHeaderCell\n    );\n    headerCells.forEach((e) => {\n      (e as CDSTableHeaderCell).isSortable = this.isSortable;\n      (e as CDSTableHeaderCell).isSelectable = this.isSelectable;\n      (e as CDSTableHeaderCell).isExpandable = this.expandable;\n    });\n    const columns = [...this._tableHeaderRow.children];\n    let sortDirection;\n    let columnIndex = 0;\n    columns.forEach((column, index) => {\n      if (\n        column.hasAttribute('sort-direction') &&\n        column.getAttribute('sort-direction') !== 'none'\n      ) {\n        sortDirection = column.getAttribute('sort-direction');\n        columnIndex = index;\n      }\n    });\n\n    columns.forEach((e, index) => {\n      if (index !== columnIndex && this.isSortable) {\n        e.setAttribute('sort-direction', 'none');\n      } else if (e.hasAttribute('is-sortable')) {\n        e.setAttribute('sort-direction', 'none');\n      }\n    });\n    this._handleSortAction(columnIndex, sortDirection);\n  }\n\n  /* eslint-enable no-constant-condition */\n\n  /**\n   * The name of the custom event fired before a new sort direction is set upon a user gesture.\n   * Cancellation of this event stops the user-initiated change in sort direction.\n   */\n  static get eventBeforeSort() {\n    return `${prefix}-table-header-cell-sort`;\n  }\n\n  /**\n   * The name of the custom event fired during search bar input\n   */\n  static get eventSearchInput() {\n    return `${prefix}-search-input`;\n  }\n\n  /**\n   * The name of the custom event fired before header row is selected/unselected upon a user gesture.\n   */\n  static get eventBeforeChangeSelectionAll() {\n    return `${prefix}-table-change-selection-all`;\n  }\n\n  /**\n   * The name of the custom event fired before a row is selected/unselected upon a user gesture.\n   */\n  static get eventBeforeChangeSelection() {\n    return `${prefix}-table-row-change-selection`;\n  }\n\n  /**\n   * The name of the custom event fired after the Cancel button is clicked.\n   */\n  static get eventClickCancel() {\n    return `${prefix}-table-batch-actions-cancel-clicked`;\n  }\n\n  /**\n   * The name of the custom event fired after the expanded state a row is toggled upon a user gesture.\n   */\n  static get eventExpandoToggle() {\n    return `${prefix}-table-row-expando-toggled`;\n  }\n\n  /**\n   * The name of the custom event fired after a row has been selected\n   */\n  static get eventTableRowSelect() {\n    return `${prefix}-table-row-selected`;\n  }\n\n  /**\n   * The name of the custom event fired after all rows have been selected\n   */\n  static get eventTableRowSelectAll() {\n    return `${prefix}-table-row-all-selected`;\n  }\n\n  /**\n   * The name of the custom event fired after the table has been sorted\n   */\n  static get eventTableSorted() {\n    return `${prefix}-table-sorted`;\n  }\n\n  /**\n   * The name of the custom event fired after the table has been filtered containing remaining rows.\n   */\n  static get eventTableFiltered() {\n    return `${prefix}-table-filtered`;\n  }\n\n  /**\n   * The CSS selector to find the overflow menu on the table cell\n   */\n  static get selectorTableCellOverflowMenu() {\n    return `${prefix}-table-cell ${prefix}-overflow-menu`;\n  }\n\n  /**\n   * The CSS selector to find the download button\n   */\n  static get selectorToolbarDownload() {\n    return `${prefix}-button[download]`;\n  }\n\n  /**\n   * The CSS selector to find the table batch actions\n   */\n  static get selectorTableBatchActions() {\n    return `${prefix}-table-batch-actions`;\n  }\n\n  /**\n   * The CSS selector to find the table toolbar\n   */\n  static get selectorTableToolbar() {\n    return `${prefix}-table-toolbar`;\n  }\n\n  /**\n   * The CSS selector to find the table toolbar content\n   */\n  static get selectorTableToolbarContent() {\n    return `${prefix}-table-toolbar-content`;\n  }\n\n  /**\n   * The CSS selector to find the table toolbar search\n   */\n  static get selectorTableToolbarSearch() {\n    return `${prefix}-table-toolbar-search`;\n  }\n\n  /**\n   * The CSS selector to find the table head\n   */\n  static get selectorTableHead() {\n    return `${prefix}-table-head`;\n  }\n\n  /**\n   * The CSS selector to find the table body\n   */\n  static get selectorTableBody() {\n    return `${prefix}-table-body`;\n  }\n\n  /**\n   * The CSS selector to find the table expanded rows\n   */\n  static get selectorTableExpandedRows() {\n    return `${prefix}-table-expanded-row`;\n  }\n\n  /**\n   * The CSS selector to find the table rows\n   */\n  static get selectorTableRow() {\n    return `${prefix}-table-row`;\n  }\n\n  /**\n   * The CSS selector to find the rows cells.\n   */\n  static get selectorTableRowCells() {\n    return `${prefix}-table-cell`;\n  }\n\n  /**\n   * The CSS selector to find the rows cells, including header cells.\n   */\n  static get selectorTableCells() {\n    return `${prefix}-table-cell, ${prefix}-table-header-cell`;\n  }\n\n  /**\n   * The CSS selector to find the header cell\n   */\n  static get selectorHeaderCell() {\n    return `${prefix}-table-header-cell`;\n  }\n\n  /**\n   * The CSS selector to find the rows, including header rows.\n   */\n  static get selectorRowsWithHeader() {\n    return `${prefix}-table-header-row,${prefix}-table-row`;\n  }\n\n  /**\n   * The CSS selector to find all rows\n   */\n  static get selectorAllRows() {\n    return `${prefix}-table-header-row,${prefix}-table-row,${prefix}-table-expanded-row`;\n  }\n\n  static styles = styles;\n}\n\nexport default CDSTable;\n"],"mappings":"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","ignoreList":[]}